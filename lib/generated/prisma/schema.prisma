// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  ACCREDITATION_OFFICER
  ACCREDITOR
  PENDING
}

enum ProgramPosition {
  CHAIRPERSON
  MEMBER
}

enum Category {
  SYSTEM
  IMPLEMENTATION
  OUTCOME
}

model User {
  id               String             @id @default(uuid())
  firstName        String
  lastName         String
  phoneNumber      String             @unique
  email            String             @unique
  hashedPassword   String
  photoURL         String?
  address          String?
  role             Role               @default(PENDING)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  programPersonnel ProgramPersonnel[]
}

model Program {
  id               String             @id @default(uuid())
  name             String
  code             String
  department       String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  programPersonnel ProgramPersonnel[]

  @@unique([name, code])
}

model ProgramPersonnel {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  program    Program  @relation(fields: [programId], references: [id])
  programId  String
  assignedAt DateTime @default(now())

  @@unique([userId, programId])
}

model Instrument {
  id   String @id @default(uuid())
  name String @unique
  area Area[]
}

model Area {
  id           Int         @id @default(autoincrement())
  label        String
  instrument   Instrument  @relation(fields: [instrumentId], references: [id])
  instrumentId String
  parameter    Parameter[]
}

model Parameter {
  id        Int         @id @default(autoincrement())
  label     String
  area      Area        @relation(fields: [areaId], references: [id])
  areaId    Int
  indicator Indicator[]
}

model Indicator {
  id          Int       @id @default(autoincrement())
  label       String
  description String
  category    Category
  evidence    String
  parameter   Parameter @relation(fields: [parameterId], references: [id])
  parameterId Int
}
